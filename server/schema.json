{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "replicaCount": {
            "type": "number",
            "description": "Determines the amount of replicas to deploy (only consumed when autoscaling.enabled is set to false).",
            "default": 1
        },
        "image": {
            "type": "object",
            "properties": {
                "repository": {
                    "type": "string",
                    "description": "Determine from which container repository to pull the image",
                    "default": "439403303254.dkr.ecr.us-east-1.amazonaws.com/amplication-server"
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "Determine when to pull an image",
                    "default": "IfNotPresent"
                },
                "tag": {
                    "type": "string",
                    "description": "Determine which version of the image to pull from the container repository",
                    "default": ""
                }
            }
        },
        "imagePullSecrets": {
            "type": "array",
            "description": "Reference to Kubernetes secrets housing dockercfg to fetch images from private registries",
            "default": [],
            "items": {}
        },
        "variables": {
            "type": "object",
            "properties": {
                "configmap": {
                    "type": "object",
                    "description": "A mapping of key:value to be add to the configmap object (to be used as environment variables on the deployment)",
                    "default": {}
                },
                "secret": {
                    "type": "object",
                    "description": "A mapping of key:value to be add to the secret object (to be used as environment variables on the deployment)",
                    "default": {}
                },
                "externalSecret": {
                    "type": "object",
                    "description": "A mapping of key:values to be added to the external secrets object (turned into a regular secret by the external secrets operator)",
                    "default": {}
                },
                "secretStoreConfiguration": {
                    "type": "object",
                    "description": "When using external secrets this part of the configuration is used to point to the secret store or cluster secret store",
                    "default": {}
                }
            }
        },
        "healthCheck": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable the healthcheck on the deployment",
                    "default": false
                },
                "readinessProbe": {
                    "type": "object",
                    "description": "A mapping of enabled & path to optionally execute readiness probes",
                    "default": {}
                },
                "livenessProbe": {
                    "type": "object",
                    "description": "A mapping of enabled & path to optionally execute liveness probes",
                    "default": {}
                }
            }
        },
        "storage": {
            "type": "object",
            "properties": {
                "shared": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Whether to enable the main pv & pvc setup",
                            "default": true
                        },
                        "suffix": {
                            "type": "string",
                            "description": "Whether to enable the main pv & pvc setup",
                            "default": "main"
                        },
                        "storageClassName": {
                            "type": "string",
                            "description": "The storage class to assign to the pv & pvc",
                            "default": "efs-main-sc"
                        },
                        "persistentVolume": {
                            "type": "object",
                            "properties": {
                                "volumeHandle": {
                                    "type": "string",
                                    "description": "A combination of the provioning id & access point id of the efs",
                                    "default": "<volume_handle>"
                                }
                            }
                        }
                    }
                }
            }
        },
        "volumes": {
            "type": "array",
            "description": "Reference for the volumes that are to be attaches to the deployment - check the deployment.yaml for the added suffix",
            "default": [],
            "items": {}
        },
        "nameOverride": {
            "type": "string",
            "description": "String to fully override chart name (will maintain the release name)",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override chart name",
            "default": ""
        },
        "serviceAccount": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Specifies whether a service account should be created",
                    "default": true
                },
                "annotations": {
                    "type": "object",
                    "description": "Annotations to add to the service account",
                    "default": {}
                },
                "name": {
                    "type": "string",
                    "description": "The name of the service account to use. If not set and create is true, a name is generated using the fullname template",
                    "default": ""
                }
            }
        },
        "podAnnotations": {
            "type": "object",
            "description": "Map of annotations to add to the pods",
            "default": {}
        },
        "podSecurityContext": {
            "type": "object",
            "description": "Security context to add to the pod (overwritten by container-level settings)",
            "default": {}
        },
        "securityContext": {
            "type": "object",
            "description": "Security context to add to the container",
            "default": {}
        },
        "containerPort": {
            "type": "number",
            "description": "The port number which is exposed on the container image",
            "default": 3000
        },
        "service": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The kubernetes service type to be used",
                    "default": "ClusterIP"
                },
                "port": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "number",
                            "description": "The port exposed on the service to be used for http traffic",
                            "default": 80
                        },
                        "https": {
                            "type": "number",
                            "description": "The port exposed on the service to be used for https traffic",
                            "default": 443
                        }
                    }
                }
            }
        },
        "ingress": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable Kubernetes ingress for ingress traffic",
                    "default": false
                },
                "className": {
                    "type": "string",
                    "description": "Name of the ingress class to use",
                    "default": ""
                },
                "annotations": {
                    "type": "object",
                    "description": "Annotations to add on the ingress object",
                    "default": {}
                },
                "hosts": {
                    "type": "array",
                    "description": "Hosts configuration for ingress object",
                    "default": [],
                    "items": {}
                },
                "tls": {
                    "type": "array",
                    "description": "TLS configuration for ingress object",
                    "default": [],
                    "items": {}
                }
            }
        },
        "resources": {
            "type": "object",
            "properties": {
                "requests": {
                    "type": "object",
                    "description": "The requested CPU & memory for the container",
                    "default": {}
                },
                "limits": {
                    "type": "object",
                    "description": "The CPU & memory limit for the container",
                    "default": {}
                }
            }
        },
        "cronJob": {
            "type": "object",
            "properties": {
                "graphql": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Whether to enable the graphql cronjob",
                            "default": false
                        },
                        "schedule": {
                            "type": "string",
                            "description": "The unix style cronjob timer",
                            "default": "0 0 1 * *"
                        },
                        "history": {
                            "type": "object",
                            "properties": {
                                "successful": {
                                    "type": "number",
                                    "description": "Determine how many successful jobs to keep",
                                    "default": 2
                                },
                                "failed": {
                                    "type": "number",
                                    "description": "Determine how many failed jobs to keep",
                                    "default": 2
                                }
                            }
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations to be added to the cronjob",
                            "default": {}
                        },
                        "query": {
                            "type": "string",
                            "description": "The graphql query to inject to the cronjob",
                            "default": "{\"query\": \"\"}"
                        },
                        "targetEndpoint": {
                            "type": "string",
                            "description": "The endpoint to target the graphql request to",
                            "default": "https://server"
                        }
                    }
                }
            }
        },
        "autoscaling": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable auto scaling (fallback to replicaCount if equals false)",
                    "default": false
                },
                "minReplicas": {
                    "type": "number",
                    "description": "Minimal amount of replicas to scale down to",
                    "default": 1
                },
                "maxReplicas": {
                    "type": "number",
                    "description": "Maximum amount of replicas to scale up to",
                    "default": 10
                },
                "targetCPUUtilizationPercentage": {
                    "type": "number",
                    "description": "Increase and decrease the number of replicas to maintain an average % of CPU utilization",
                    "default": 80
                },
                "targetMemoryUtilizationPercentage": {
                    "type": "number",
                    "description": "Increase and decrease the number of replicas to maintain an average % of memory utilization",
                    "default": 80
                }
            }
        },
        "nodeSelector": {
            "type": "object",
            "description": "Node labels for pods assignment",
            "default": {}
        },
        "tolerations": {
            "type": "array",
            "description": "Tolerations for pods assignment",
            "default": [],
            "items": {}
        },
        "affinity": {
            "type": "object",
            "description": "Affinity for pods assignment",
            "default": {}
        }
    }
}